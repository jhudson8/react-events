/*!
 * [react-events](https://github.com/jhudson8/react-events) v0.1.1;  MIT license; Joe Hudson<joehud_AT_gmail.com>
 */
!function(n){"function"==typeof define&&define.amd?define(["react"],n):"undefined"!=typeof exports&&"undefined"!=typeof require?module.exports=function(t){n(t)}:n(React)}(function(n){function t(n,t,e){var i=t;if("string"==typeof t&&(i=e[t]),!t)throw'no callback function exists for "'+t+'"';t=function(){return i.apply(e,arguments)};var f=n.split(":"),r=f[0],a=o[r],u=f.slice(1).join(":");if(!a)throw'no handler registered for "'+n+'"';return a.call(e,{path:u},t)}function e(n,t){return function(e,o){function f(e,i){return function(){var f="function"==typeof n?n.call(i,a,u):n;f&&f[t[e]](u,o)}}var r=e.path.match(i);if(r){var a=r[1],u=r[2];return{on:f("on",this),off:f("off",this)}}throw"invalid event handler"}}var o={},i=/^([^:]+):?(.*)/,f=n.events={handle:function(n,t,i){i&&(i=i===!0?{on:"on",off:"off"}:i,t=e(t,i)),o[n]=t}};"undefined"!=typeof window&&f.handle("window",window,{on:"addEventListener",off:"removeEventListener"}),f.handle("ref",function(n){return this.refs[n]},!0),f.handle("dom",function(n,t){var e=n.path.match(i);return{on:function(){$(this.getDOMNode()).on(e[1],e[2],t)},off:function(){$(this.getDOMNode()).off(e[1],e[2],t)}}}),n.mixins.add("events",function(){var n={getInitialState:function(){var n=this._eventHandlers=[];if(this.events)for(var e in this.events)n.push(t(e,this.events[e],this));return null},componentDidMount:function(){for(var n=this._eventHandlers,t=0;t<n.length;t++)n[t].on.call(this)},componentWillUnmount:function(){for(var n=this._eventHandlers,t=0;t<n.length;t++)n[t].off.call(this)}};return[n,f.mixin]})});